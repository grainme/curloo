name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: ["stable", "nightly"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run tests
        run: cargo test --verbose

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            grainme47/curloo:latest
            grainme47/curloo:${{ github.sha }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image for release
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            grainme47/curloo:${{ github.ref_name }}

      - name: Build binaries
        uses: cross-rs/cross-action@v1
        with:
          command: build --release --target x86_64-unknown-linux-musl

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-musl/release/curloo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}